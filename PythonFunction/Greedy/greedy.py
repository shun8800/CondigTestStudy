# 그리디 알고리즘은 현재 상황에서 지금 당장 좋은 것만 고르는 방법
# 일반적인 그리디 알고리즘은 문제를 풀기 위한 최소한의 아이디어를 떠올릴 수 있는 능력 요구
# 단순히 좋아 보이는 것도 반복적으로 선택해도 최적의 해를 구할 수 있는지 검토
# 대부분의 그리드 문제는 탐욕법으로 얻은 해가 최적의 해가 된다.
# 거스름 돈 문제
# 최적의 해를 빠르게 구하려면 가장 큰 화폐 단위부터 돈을 거슬러 주어야 함
# 이후에 100원, 50원, 10원 ...
# 가지고 있는 동전의 큰 단위(500원)가 작은 단위(100원, 50원..)의 배수이기 때문
# 이러한 생각을 정당성 검토라고 함

'''
n = 1260 # 거슬러줘야 할 돈
count = 0 # 거슬러줘야 할 동전 수 초기화

array = [500, 100, 50, 10] # 동전의 금액

for coin in array:
    count += n // coin
    n %= coin

print(count)
'''
# 화폐의 종류가 K라고 하면 시간 복잡도는 O(K) -> 3개면 3번 연산
# 시간은 금액과는 무관하고 화폐의 종류와 연관이 있음

